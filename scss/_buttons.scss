@import "./buttons-vars";

button.cnv {
	all: unset;
	box-sizing: border-box;
	text-align: center;
	vertical-align: middle;
	outline: 3px solid transparent;

	color: var(--cnv-button-color);
	background: var(--cnv-button-background);
	border: var(--cnv-button-border);

	// BOX
	padding: 0 var(--cnv-button-horizontal-padding);
	border-radius: var(--cnv-button-border-radius, var(--cnv-border-radius));
	height: var(--cnv-button-height);

	// TEXT
	font-family: var(--cnv-button-font-family);
	font-size: var(--cnv-button-font-size);
	font-weight: var(--cnv-button-font-weight);
	text-transform: var(--cnv-button-text-transform);


	// ETC
	transition: var(--cnv-transition);
	cursor: var(--cnv-button-cursor);
	box-shadow: var(--cnv-button-box-shadow);
	//line-height: 100%;

	&:enabled {
		&:hover {
			background: var(--cnv-button-hover-background);
			color: var(--cnv-button-hover-color);
		}

		&:active {
			opacity: var(--cnv-button-active-opacity);
		}

		&:focus-visible {
			outline: var(--cnv-button-focus-outline);
		}
	}

	&:disabled {
		opacity: var(--cnv-button-disabled-opacity);
		cursor: var(--cnv-button-disabled-cursor);
	}

	// SIZES

	@each $sizeName in $cnv-sizes {
		&.#{$sizeName} {
			font-size: var(--cnv-button-font-size-#{$sizeName});
		}
	}

	&.with-icon {
		display: inline-flex;
		align-items: center;

		.icon {
			width: var(--cnv-button-icon-size);
			height: var(--cnv-button-icon-size);
			margin-right: var(--cnv-button-icon-margin);
		}
	}

	&.icon {
		width: var(--cnv-button-height);
		padding: 0;
		display: inline-flex;
		align-items: center;
		justify-content: center;

		.icon {
			width: var(--cnv-button-icon-size);
			height: var(--cnv-button-icon-size);
		}

		&.round {
			padding: 0;
		}
	}

	&.round {
		border-radius: 1000px;
		padding: 0 var(--cnv-button-round-horizontal-padding);
	}

	&.block {
		display: block;
		width: 100%;
	}

	&.outlined {
		color: var(--cnv-button-outlined-color);
		border: var(--cnv-button-outlined-border);
		background: transparent;

		&:hover {
			background: var(--cnv-button-outlined-hover-background);
			color: var(--cnv-button-outlined-hover-color);
		}
	}

	&.subtle {
		color: var(--cnv-button-subtle-color);
		background: var(--cnv-button-subtle-background);

		&:hover {
			color: var(--cnv-button-subtle-color);
			background: var(--cnv-button-subtle-hover-background);
		}
	}

	&.text-only {
		color: var(--cnv-button-text-only-color);
		background: transparent;

		&:hover {
			color: var(--cnv-button-text-only-color);
			background: var(--cnv-button-text-only-hover-background);
		}
	}
}

// VARIANTS

@each $variantName in $cnv-buttonVariantNames {

	$selector: #{"button.cnv." + $variantName};
	$colorName: $variantName;

	@if $variantName == "contrast" {
		$colorName: "text";
	}

	#{$selector} {
		--cnv-button-color: var(--cnv-color-invert);
		--cnv-button-background: var(--cnv-color-#{$colorName}-500);

		&:enabled {
			&:hover {
				--cnv-button-hover-background: var(--cnv-color-#{$colorName}-600);
				--cnv-button-hover-color: var(--cnv-color-invert);
			}

			&:focus-visible {
				--cnv-button-focus-outline: var(--cnv-#{$variantName}-focus-outline);
			}
		}

		&.outlined {
			--cnv-button-outlined-color: var(--cnv-color-#{$colorName}-500);
			--cnv-button-outlined-border: 1px solid var(--cnv-color-#{$colorName}-500);

			&:hover {
				--cnv-button-outlined-hover-background: var(--cnv-color-#{$colorName}-500);
				--cnv-button-outlined-hover-color: var(--cnv-color-invert);
			}
		}

		&.subtle {
			--cnv-button-subtle-color: var(--cnv-color-#{$colorName}-500);
			--cnv-button-subtle-background: var(--cnv-color-#{$colorName}-25);

			&:hover {
				--cnv-button-subtle-hover-background: var(--cnv-color-#{$colorName}-50);
			}
		}

		&.text-only {
			--cnv-button-text-only-color: var(--cnv-color-#{$colorName}-500);

			&:hover {
				--cnv-button-text-only-hover-background: var(--cnv-color-#{$colorName}-25);
			}
		}
	}
}
